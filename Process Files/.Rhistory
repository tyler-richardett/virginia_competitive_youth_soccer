dmvTractsShapefiles <- geo_join(dmvTractsShapefiles, dmvTracts, "GEOID", "GEOID")
save(dmvTractsShapefiles, file = "dmvTractsShapefiles.Rdata")
dmvClubs <- read.csv("dmvClubs.csv", na.strings = "", colClasses = c(rep("character", 2), rep("numeric", 3)))
load("dmvTractsShapefiles.Rdata")
load("dmvOutline.Rdata")
dmvClubs %>% leaflet() %>%
addProviderTiles("CartoDB.PositronNoLabels", options = providerTileOptions(opacity = 0.75)) %>%
addProviderTiles("CartoDB.PositronOnlyLabels") %>%
addPolygons(data = dmvTractsShapefiles,
fillColor = ~pal3(HHI.Factor),
color = "#ffffff",
fillOpacity = 0.7,
weight = 0.75,
smoothFactor = 0.2) %>%
addPolygons(data = dmvOutline,
fillColor = "#000000",
fillOpacity = 0,
color = "#b2aeae",
weight = 1.25,
opacity = 1) %>%
addCircleMarkers(weight = 0.75,
radius = log(dmvClubs$Teams)*3,
fillColor = "#ff7256",
color = "#ffffff",
fillOpacity = 0.9,
opacity = 1,
popup = dmvClubs$Name) %>%
addLegend(title = "Median Household Income (2016 Dollars)",
pal = pal3,
values = dmvTractsShapefiles$HHI.Factor,
position = "bottomleft")
pal3 <- colorFactor("Greys", dmvTractsShapefiles$HHI.Factor, na.color = NA)
dmvClubs %>% leaflet() %>%
addProviderTiles("CartoDB.PositronNoLabels", options = providerTileOptions(opacity = 0.75)) %>%
addProviderTiles("CartoDB.PositronOnlyLabels") %>%
addPolygons(data = dmvTractsShapefiles,
fillColor = ~pal3(HHI.Factor),
color = "#ffffff",
fillOpacity = 0.7,
weight = 0.75,
smoothFactor = 0.2) %>%
addPolygons(data = dmvOutline,
fillColor = "#000000",
fillOpacity = 0,
color = "#b2aeae",
weight = 1.25,
opacity = 1) %>%
addCircleMarkers(weight = 0.75,
radius = log(dmvClubs$Teams)*3,
fillColor = "#ff7256",
color = "#ffffff",
fillOpacity = 0.9,
opacity = 1,
popup = dmvClubs$Name) %>%
addLegend(title = "Median Household Income (2016 Dollars)",
pal = pal3,
values = dmvTractsShapefiles$HHI.Factor,
position = "bottomleft")
View(dmvClubsKey)
View(dmvClubs)
dmvClubs$GEOID <- append_geoid(dmvClubs[,3:4])$geoid
dmvClubs <- dmvClubs %>% filter(!(is.na(Latitude)))
dmvClubs$GEOID <- append_geoid(dmvClubs[,3:4])$geoid
View(dmvClubs)
append_geoid(dmvClubs[1,3:4])$geoid
append_geoid(dmvClubs[1,4:3])$geoid
append_geoid(dmvClubs[1,c(4,3)])$geoid
dmvClubs <- dmvClubs %>% filter(!(is.na(Latitude))) %>% rename(lat = Latitude, lon = Longitude)
View(dmvClubs)
dmvClubs <- dmvClubs %>% filter(!(is.na(Latitude))) %>% dplyr::rename(lat = Latitude, lon = Longitude)
dmvClubs$GEOID <- append_geoid(dmvClubs[,3:4])$geoid
View(dmvClubs)
dmvClubs <- dmvClubs %>%
mutate(GEOID = substring(GEOID, 1, 5)) %>%
filter(GEOID %in% c("11001", "24031", "24033", "51013", "51059", "51510", "51600", "51610"))
View(dmvClubs)
View(dmvClubs)
## Import data
dmvGamesHome <- read.csv("dmvGamesHome.csv", stringsAsFactors = FALSE, na.strings = "", colClasses = c(rep("character", 8), rep("numeric", 2), rep("character", 7)))
allTeams <- read_xlsx("Full Dataset.xlsx", "Teams")
## Function that will calculate distance in km from geographic mean to each coordinate. Credit: https://stackoverflow.com/questions/24439073/removing-spatial-outliers-lat-and-long-coordinates-in-r
earth.dist <- function (long1, lat1, long2, lat2) {
rad <- pi/180
a1 <- lat1 * rad
a2 <- long1 * rad
b1 <- lat2 * rad
b2 <- long2 * rad
dlon <- b2 - a2
dlat <- b1 - a1
a <- (sin(dlat/2))^2 + cos(a1) * cos(b1) * (sin(dlon/2))^2
c <- 2 * atan2(sqrt(a), sqrt(1 - a))
R <- 6378.145
d <- R * c
return(d)
}
## Calculate geographic mean and remove outliers (>= 50 km from center)
dmvClubsKey <- dmvGamesHome %>% group_by(HomeClubID) %>% dplyr::summarize(Name = unique(HomeClubName), ClubAvgLatitude = mean(FieldLatitude, na.rm = TRUE), ClubAvgLongitude = mean(FieldLongitude, na.rm = TRUE))
outliersKey <- dmvGamesHome %>% left_join(dmvClubsKey, "HomeClubID")
outliersKey <- outliersKey %>% group_by(HomeClubID, FieldID) %>% dplyr::summarize(Distance = earth.dist(FieldLongitude, FieldLatitude, ClubAvgLongitude, ClubAvgLatitude)[1])
outliers <- outliersKey %>% filter(Distance >= 50)
for(i in 1:nrow(outliers)){
dmvGamesHome <- dmvGamesHome %>% filter(!(HomeClubID == outliers$HomeClubID[i] & FieldID == outliers$FieldID[i]))
}
## Calculate number of teams per club
allClubsCounts <- allTeams %>% group_by(ClubID) %>% dplyr::summarize(Teams = length(TeamID))
dmvClubs <- dmvGamesHome %>% group_by(HomeClubID) %>% dplyr::summarize(Name = unique(HomeClubName), Latitude = mean(FieldLatitude, na.rm = TRUE), Longitude = mean(FieldLongitude, na.rm = TRUE)) %>% dplyr::rename(ClubID = HomeClubID)
dmvClubs <- dmvClubs %>% left_join(allClubsCounts)
## Include only teams in area of interest
dmvClubs <- dmvClubs %>% filter(!(is.na(Latitude))) %>% dplyr::rename(lat = Latitude, lon = Longitude)
dmvClubs$GEOID <- append_geoid(dmvClubs[,3:4])$geoid
dmvClubs <- dmvClubs %>%
mutate(GEOID = substring(GEOID, 1, 5)) %>%
filter(GEOID %in% c("11001", "24031", "24033", "51013", "51059", "51510", "51600", "51610")) %>%
select(ClubID, Name, Latitude = lat, Longitude = lon, Teams)
View(dmvClubs)
write.csv(dmvClubs, "dmvClubs.csv", row.names = FALSE, na = "")
View(dmvTracts)
?tracts
?counties
virginiaTractsShapefiles <- tracts("VA", c("51013", "51059", "51510", "51600", "51610"), cb = TRUE)
marylandTractsShapefiles <- tracts("MD", c("24031", "24033"), cb = TRUE)
dcTractsShapefiles <- tracts("DC", cb = TRUE)
dmvTractsShapefiles <- rbind(virginiaTractsShapefiles, marylandTractsShapefiles, dcTractsShapefiles)
dmvTractsShapefiles <- geo_join(dmvTractsShapefiles, dmvTracts, "GEOID", "GEOID")
save(dmvTractsShapefiles, file = "dmvTractsShapefiles.Rdata")
dmvOutline <- counties(c("DC", "MD", "VA"), cb = TRUE)
dmvOutline <- dmvOutline[dmvOutline@data$COUNTYFP %in% c("11001", "24031", "24033", "51013", "51059", "51510", "51600", "51610"), ]
dmvOutline <- counties(c("DC", "MD", "VA"), cb = TRUE)
dmvOutline <- dmvOutline[dmvOutline@data$GEOID %in% c("11001", "24031", "24033", "51013", "51059", "51510", "51600", "51610"), ]
save(dmvOutline, file = "dmvOutline.Rdata")
dmvClubs <- read.csv("dmvClubs.csv", na.strings = "", colClasses = c(rep("character", 2), rep("numeric", 3)))
load("dmvTractsShapefiles.Rdata")
load("dmvOutline.Rdata")
pal1 <- colorBin("Greys", dmvTractsShapefiles$Poverty.Rate, 5, na.color = NA)
dmvClubs %>% leaflet() %>%
addProviderTiles("CartoDB.PositronNoLabels", options = providerTileOptions(opacity = 0.75)) %>%
addProviderTiles("CartoDB.PositronOnlyLabels") %>%
addPolygons(data = dmvTractsShapefiles,
fillColor = ~pal1(Poverty.Rate),
color = "#b2aeae",
fillOpacity = 0.7,
weight = 0.75,
smoothFactor = 0.2) %>%
addPolygons(data = dmvOutline,
fillColor = NA,
fillOpacity = 0,
color = "#b2aeae",
weight = 1.25,
opacity = 1) %>%
addCircleMarkers(weight = 0.75,
radius = log(dmvClubs$Teams)*3,
fillColor = "#ff7256",
color = "#ffffff",
fillOpacity = 0.9,
opacity = 1,
popup = dmvClubs$Name) %>%
addLegend(title = "Poverty Rate<br>(Families with Children Under 18)",
pal = pal1,
values = dmvTractsShapefiles$Poverty.Rate,
position = "bottomleft",
labFormat = labelFormat(suffix = "%"))
View(dcTractsShapefiles@data)
View(dmvTracts)
virginiaTractsShapefiles <- tracts("VA", c("51013", "51059", "51510", "51600", "51610"), cb = TRUE)
virginiaTractsShapefiles <- tracts("VA", c("013", "059", "510", "600", "610"), cb = TRUE)
marylandTractsShapefiles <- tracts("MD", c("031", "033"), cb = TRUE)
dmvTractsShapefiles <- rbind(virginiaTractsShapefiles, marylandTractsShapefiles, dcTractsShapefiles)
dmvTractsShapefiles <- geo_join(dmvTractsShapefiles, dmvTracts, "GEOID", "GEOID")
save(dmvTractsShapefiles, file = "dmvTractsShapefiles.Rdata")
load("dmvTractsShapefiles.Rdata")
load("dmvOutline.Rdata")
pal1 <- colorBin("Greys", dmvTractsShapefiles$Poverty.Rate, 5, na.color = NA)
dmvClubs %>% leaflet() %>%
addProviderTiles("CartoDB.PositronNoLabels", options = providerTileOptions(opacity = 0.75)) %>%
addProviderTiles("CartoDB.PositronOnlyLabels") %>%
addPolygons(data = dmvTractsShapefiles,
fillColor = ~pal1(Poverty.Rate),
color = "#b2aeae",
fillOpacity = 0.7,
weight = 0.75,
smoothFactor = 0.2) %>%
addPolygons(data = dmvOutline,
fillColor = NA,
fillOpacity = 0,
color = "#b2aeae",
weight = 1.25,
opacity = 1) %>%
addCircleMarkers(weight = 0.75,
radius = log(dmvClubs$Teams)*3,
fillColor = "#ff7256",
color = "#ffffff",
fillOpacity = 0.9,
opacity = 1,
popup = dmvClubs$Name) %>%
addLegend(title = "Poverty Rate<br>(Families with Children Under 18)",
pal = pal1,
values = dmvTractsShapefiles$Poverty.Rate,
position = "bottomleft",
labFormat = labelFormat(suffix = "%"))
pal2 <- colorBin("Greys", dmvTractsShapefiles$Minority.Percent, 5, na.color = NA)
dmvClubs %>% leaflet() %>%
addProviderTiles("CartoDB.PositronNoLabels", options = providerTileOptions(opacity = 0.75)) %>%
addProviderTiles("CartoDB.PositronOnlyLabels") %>%
addPolygons(data = dmvTractsShapefiles,
fillColor = ~pal2(Minority.Percent),
color = "#b2aeae",
fillOpacity = 0.7,
weight = 0.75,
smoothFactor = 0.2) %>%
addPolygons(data = dmvOutline,
fillColor = NA,
fillOpacity = 0,
color = "#b2aeae",
weight = 1.25,
opacity = 1) %>%
addCircleMarkers(weight = 0.75,
radius = log(dmvClubs$Teams)*3,
fillColor = "#ff7256",
color = "#ffffff",
fillOpacity = 0.9,
opacity = 1,
popup = dmvClubs$Name) %>%
addLegend(title = "Share of Nonwhite Residents",
pal = pal2,
values = dmvTractsShapefiles$Minority.Percent,
position = "bottomleft",
labFormat = labelFormat(suffix = "%"))
allFieldsCoordsTracts <- read.csv("allFieldsCoordsTracts.csv", stringsAsFactors = FALSE, na.strings = "", colClasses = c(rep("character", 7), rep("numeric", 2), "character"))
dmvFieldsCoordsTracts <- allFieldsCoordsTracts %>% filter(State %in% c("DC", "MD", "VA"))
dmvTractsFields <- data.frame(GEOID = unique(dmvFieldsCoordsTracts$GEOID))
dmvTractsFields <- dmvTractsFields %>% mutate(GEOID = as.character(GEOID)) %>% left_join(dmvTracts)
write.csv(dmvTractsFields, "dmvTractsFields.csv", row.names = FALSE, na = "")
View(dmvTractsFields)
library(dplyr)
library(ggplot2)
library(scales)
library(ROSE)
library(rpart)
library(rpart.plot)
## Import data
virginiaTractsFields <- read.csv("virginiaTractsFields.csv", na.strings = "", stringsAsFactors = FALSE)
virginiaTracts <- read.csv("virginiaTracts.csv", na.strings = "", stringsAsFactors = FALSE)
## Reshape data for ggplot2
virginiaTractsFields <- virginiaTractsFields %>% mutate(Type = "Virginia Tracts with Fields") %>% select(Type, GEOID:HHI.Factor)
virginiaTracts <- virginiaTracts %>% mutate(Type = "All Virginia Tracts") %>% select(Type, GEOID:HHI.Factor)
virginiaComparison <- rbind(virginiaTractsFields[,c(1,4,10,11)], virginiaTracts[,c(1,4,10,11)])
virginiaComparison$Type <- as.factor(virginiaComparison$Type)
virginiaComparison <- virginiaComparison %>% mutate(Minority.Percent = Minority.Percent/100, Poverty.Rate = Poverty.Rate/100, Household.Income = Household.Income/1000)
## Custom ggplot theme
theme_TCR <- function() {
theme_bw(base_size = 12, base_family = "Avenir") %+replace%
theme(
panel.border = element_blank(),
axis.line.x = element_line(color = "black", size = 0.5),
axis.ticks.y = element_blank(),
axis.text = element_text(color = "black", size = 11),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(linetype = "dotted",
color = "grey"),
panel.grid.minor = element_blank(),
plot.title = element_text(face = "bold", size = 16),
axis.title.x = element_text(margin = margin(20,0,10,0)),
axis.title.y = element_text(margin = margin(0,15,0,0), angle = 90),
legend.position = "bottom",
legend.title = element_blank(),
legend.direction = "horizontal",
legend.box = "horizontal",
legend.key.size = unit(10, "pt"),
plot.margin = margin(r = 30, t = 10),
panel.background = element_rect(fill = "transparent", color = NA),
plot.background = element_rect(fill = "transparent", color = NA),
legend.background = element_rect(fill = "transparent", color = NA)
)
}
## Household income
ggplot(virginiaComparison, aes(x = Household.Income, fill = Type)) +
geom_density(alpha = 0.5) +
theme_TCR() +
scale_y_continuous(expand = c(0,0)) +
scale_fill_manual(values = c("grey50", "coral1"),
labels = c("All Virginia Tracts    ",
"Virginia Tracts with Fields")) +
scale_x_continuous(labels = dollar_format("$", "K")) +
ylab("Density") +
xlab("Household Income (2016 Dollars)")
## Import data
dmvTractsFields <- read.csv("dmvTractsFields.csv", na.strings = "", stringsAsFactors = FALSE)
dmvTracts <- read.csv("dmvTracts.csv", na.strings = "", stringsAsFactors = FALSE)
## Reshape data for ggplot2
dmvTractsFields <- dmvTractsFields %>% mutate(Type = "dmv Tracts with Fields") %>% select(Type, GEOID:HHI.Factor)
dmvTracts <- dmvTracts %>% mutate(Type = "All dmv Tracts") %>% select(Type, GEOID:HHI.Factor)
dmvComparison <- rbind(dmvTractsFields[,c(1,4,10,11)], dmvTracts[,c(1,4,10,11)])
dmvComparison$Type <- as.factor(dmvComparison$Type)
dmvComparison <- dmvComparison %>% mutate(Minority.Percent = Minority.Percent/100, Poverty.Rate = Poverty.Rate/100, Household.Income = Household.Income/1000)
## Custom ggplot theme
theme_TCR <- function() {
theme_bw(base_size = 12, base_family = "Avenir") %+replace%
theme(
panel.border = element_blank(),
axis.line.x = element_line(color = "black", size = 0.5),
axis.ticks.y = element_blank(),
axis.text = element_text(color = "black", size = 11),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(linetype = "dotted",
color = "grey"),
panel.grid.minor = element_blank(),
plot.title = element_text(face = "bold", size = 16),
axis.title.x = element_text(margin = margin(20,0,10,0)),
axis.title.y = element_text(margin = margin(0,15,0,0), angle = 90),
legend.position = "bottom",
legend.title = element_blank(),
legend.direction = "horizontal",
legend.box = "horizontal",
legend.key.size = unit(10, "pt"),
plot.margin = margin(r = 30, t = 10),
panel.background = element_rect(fill = "transparent", color = NA),
plot.background = element_rect(fill = "transparent", color = NA),
legend.background = element_rect(fill = "transparent", color = NA)
)
}
## Household income
ggplot(dmvComparison, aes(x = Household.Income, fill = Type)) +
geom_density(alpha = 0.5) +
theme_TCR() +
scale_y_continuous(expand = c(0,0)) +
scale_fill_manual(values = c("grey50", "coral1"),
labels = c("All dmv Tracts    ",
"dmv Tracts with Fields")) +
scale_x_continuous(labels = dollar_format("$", "K")) +
ylab("Density") +
xlab("Household Income (2016 Dollars)")
ggplot(dmvComparison, aes(x = Minority.Percent, fill = Type)) +
geom_density(alpha = 0.5) +
theme_TCR() +
scale_y_continuous(expand = c(0,0)) +
scale_fill_manual(values = c("grey50", "coral1"),
labels = c("All dmv Tracts    ",
"dmv Tracts with Fields")) +
scale_x_continuous(labels = percent_format()) +
ylab("Density") +
xlab("Share of Nonwhite Residents")
ggplot(dmvComparison, aes(x = Poverty.Rate, fill = Type)) +
geom_density(alpha = 0.5) +
theme_TCR() +
scale_y_continuous(expand = c(0,0)) +
scale_fill_manual(values = c("grey50", "coral1"),
labels = c("All DMV Tracts    ",
"DMV Tracts with Fields")) +
scale_x_continuous(labels = percent_format()) +
ylab("Density") +
xlab("Poverty Rate (Families with Children Under 18)")
ggplot(dmvComparison, aes(x = Minority.Percent, fill = Type)) +
geom_density(alpha = 0.5) +
theme_TCR() +
scale_y_continuous(expand = c(0,0)) +
scale_fill_manual(values = c("grey50", "coral1"),
labels = c("All DMV Tracts    ",
"DMV Tracts with Fields")) +
scale_x_continuous(labels = percent_format()) +
ylab("Density") +
xlab("Share of Nonwhite Residents")
ggplot(dmvComparison, aes(x = Household.Income, fill = Type)) +
geom_density(alpha = 0.5) +
theme_TCR() +
scale_y_continuous(expand = c(0,0)) +
scale_fill_manual(values = c("grey50", "coral1"),
labels = c("All DMV Tracts    ",
"DMV Tracts with Fields")) +
scale_x_continuous(labels = dollar_format("$", "K")) +
ylab("Density") +
xlab("Household Income (2016 Dollars)")
ggplot(dmvComparison, aes(x = Household.Income, fill = Type)) +
geom_density(alpha = 0.5) +
theme_TCR() +
scale_y_continuous(expand = c(0,0)) +
scale_fill_manual(values = c("grey50", "coral1"),
labels = c("All DMV Tracts    ",
"DMV Tracts with Fields")) +
scale_x_continuous(labels = dollar_format("$", "K")) +
ylab("Density") +
xlab("Household Income (2016 Dollars)")
ggsave("../Figures/densityPlot_HHI.png", width = 5, height = 4, units = "in", bg = "transparent")
ggplot(dmvComparison, aes(x = Minority.Percent, fill = Type)) +
geom_density(alpha = 0.5) +
theme_TCR() +
scale_y_continuous(expand = c(0,0)) +
scale_fill_manual(values = c("grey50", "coral1"),
labels = c("All DMV Tracts    ",
"DMV Tracts with Fields")) +
scale_x_continuous(labels = percent_format()) +
ylab("Density") +
xlab("Share of Nonwhite Residents")
ggsave("../Figures/densityPlot_Race.png", width = 10, height = 4, units = "in", bg = "transparent")
ggplot(dmvComparison, aes(x = Poverty.Rate, fill = Type)) +
geom_density(alpha = 0.5) +
theme_TCR() +
scale_y_continuous(expand = c(0,0)) +
scale_fill_manual(values = c("grey50", "coral1"),
labels = c("All DMV Tracts    ",
"DMV Tracts with Fields")) +
scale_x_continuous(labels = percent_format()) +
ylab("Density") +
xlab("Poverty Rate (Families with Children Under 18)")
ggsave("../Figures/densityPlot_Poverty.png", width = 5, height = 4, units = "in", bg = "transparent")
dmvClubs %>% leaflet() %>%
addProviderTiles("CartoDB.PositronNoLabels", options = providerTileOptions(opacity = 0.75)) %>%
addProviderTiles("CartoDB.PositronOnlyLabels") %>%
addPolygons(data = dmvTractsShapefiles,
fillColor = ~pal3(HHI.Factor),
color = "#ffffff",
fillOpacity = 0.7,
weight = 0.75,
smoothFactor = 0.2) %>%
addPolygons(data = dmvOutline,
fillColor = "#000000",
fillOpacity = 0,
color = "#b2aeae",
weight = 1.25,
opacity = 1) %>%
addCircleMarkers(weight = 0.75,
radius = log(dmvClubs$Teams)*3,
fillColor = "#ff7256",
color = "#ffffff",
fillOpacity = 0.9,
opacity = 1,
popup = dmvClubs$Name) %>%
addLegend(title = "Median Household Income (2016 Dollars)",
pal = pal3,
values = dmvTractsShapefiles$HHI.Factor,
position = "bottomleft")
View(dmvTracts)
View(allClubsKeyHome)
View(dmvGamesHome)
?setView
dmvClubs %>% leaflet() %>%
addProviderTiles("CartoDB.PositronNoLabels", options = providerTileOptions(opacity = 0.75)) %>%
addProviderTiles("CartoDB.PositronOnlyLabels") %>%
addPolygons(data = dmvTractsShapefiles,
fillColor = ~pal1(Poverty.Rate),
color = "#b2aeae",
fillOpacity = 0.7,
weight = 0.75,
smoothFactor = 0.2) %>%
addPolygons(data = dmvOutline,
fillColor = NA,
fillOpacity = 0,
color = "#b2aeae",
weight = 1.25,
opacity = 1) %>%
addCircleMarkers(weight = 0.75,
radius = log(dmvClubs$Teams)*3,
fillColor = "#ff7256",
color = "#ffffff",
fillOpacity = 0.9,
opacity = 1,
popup = dmvClubs$Name) %>%
addLegend(title = "Poverty Rate<br>(Families with Children Under 18)",
pal = pal1,
values = dmvTractsShapefiles$Poverty.Rate,
position = "bottomleft",
labFormat = labelFormat(suffix = "%")) %>%
setView(zoom = 10)
setwd("~/Documents/George Mason University/2018 Spring/STAT-515; Visualization for Analytics/Midterm/youth-soccer-virginia/Process Files")
virginiaTeamsInvestment <- read.csv("virginiaTeamsInvestment.csv", na.strings = "", colClasses = c(rep("character", 4), "numeric", "character", rep("numeric", 7), "factor"))
theme_TCR <- function() {
theme_bw(base_size = 12, base_family = "Avenir") %+replace%
theme(
panel.border = element_blank(),
axis.line.y = element_line(color = "black", size = 0.5),
axis.ticks.x = element_blank(),
axis.text = element_text(color = "black", size = 11),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_line(linetype = "dotted",
color = "grey"),
panel.grid.minor = element_blank(),
plot.title = element_text(face = "bold", size = 16),
axis.title.x = element_text(margin = margin(20,0,10,0)),
axis.title.y = element_text(margin = margin(0,15,0,0), angle = 90),
legend.position = "bottom",
legend.title = element_blank(),
legend.direction = "horizontal",
legend.box = "horizontal",
legend.key.size = unit(10, "pt"),
plot.margin = margin(r = 30, t = 10),
panel.background = element_rect(fill = "transparent", color = NA),
plot.background = element_rect(fill = "transparent", color = NA),
legend.background = element_rect(fill = "transparent", color = NA)
)
}
ggplot(virginiaTeamsInvestment, aes(x = LeagueTier, y = WeightedDistance)) +
geom_boxplot(fill = "coral1", alpha = 0.9) +
theme_TCR() +
scale_y_continuous(expand = c(0,0), labels = dollar_format("")) +
ylab("Single-Season Travel Distance (Miles)") +
xlab("Level of Play")
library(dplyr)
library(ggplot2)
library(scales)
ggplot(virginiaTeamsInvestment, aes(x = LeagueTier, y = WeightedDistance)) +
geom_boxplot(fill = "coral1", alpha = 0.9) +
theme_TCR() +
scale_y_continuous(expand = c(0,0), labels = dollar_format("")) +
ylab("Single-Season Travel Distance (Miles)") +
xlab("Level of Play")
ggsave("boxplot_TravelDistance.png", width = 5, height = 4, units = "in", bg = "transparent")
ggplot(virginiaTeamsInvestment, aes(x = LeagueTier, y = WeightedTime/60)) +
geom_boxplot(fill = "coral1", alpha = 0.9) +
theme_TCR() +
scale_y_continuous(expand = c(0,0)) +
ylab("Single-Season Travel Time (Hours)") +
xlab("Level of Play")
ggsave("boxplot_TravelTime.png", width = 5, height = 4, units = "in", bg = "transparent")
